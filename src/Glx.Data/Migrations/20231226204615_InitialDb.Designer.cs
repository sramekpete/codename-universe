// <auto-generated />
using System;
using Glx.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Glx.Data.Migrations
{
    [DbContext(typeof(GlxContext))]
    [Migration("20231226204615_InitialDb")]
    partial class InitialDb
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Characters_Species", b =>
                {
                    b.Property<long>("CharactersId")
                        .HasColumnType("bigint");

                    b.Property<long>("SpeciesId")
                        .HasColumnType("bigint");

                    b.HasKey("CharactersId", "SpeciesId");

                    b.HasIndex("SpeciesId");

                    b.ToTable("Characters_Species");
                });

            modelBuilder.Entity("Characters_Starships", b =>
                {
                    b.Property<long>("PilotsId")
                        .HasColumnType("bigint");

                    b.Property<long>("StarshipsId")
                        .HasColumnType("bigint");

                    b.HasKey("PilotsId", "StarshipsId");

                    b.HasIndex("StarshipsId");

                    b.ToTable("Characters_Starships");
                });

            modelBuilder.Entity("Characters_Vehicles", b =>
                {
                    b.Property<long>("PilotsId")
                        .HasColumnType("bigint");

                    b.Property<long>("VehiclesId")
                        .HasColumnType("bigint");

                    b.HasKey("PilotsId", "VehiclesId");

                    b.HasIndex("VehiclesId");

                    b.ToTable("Characters_Vehicles");
                });

            modelBuilder.Entity("Glx.Data.Schema.CharacterSchema", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("EyeColor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HairColor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Height")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("PlanetId")
                        .HasColumnType("bigint");

                    b.Property<string>("SkinColor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("YearOfBirth")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("Id"));

                    b.HasIndex("PlanetId");

                    b.ToTable("Characters", (string)null);
                });

            modelBuilder.Entity("Glx.Data.Schema.MovieSchema", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Director")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Episode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Introduction")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Producer")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Released")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("Id"));

                    b.ToTable("Movies", (string)null);
                });

            modelBuilder.Entity("Glx.Data.Schema.PlanetSchema", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Climate")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Diameter")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gravity")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OrbitalPeriod")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Population")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RotationPeriod")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Terrain")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WaterCoverage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("Id"));

                    b.ToTable("Planets", (string)null);
                });

            modelBuilder.Entity("Glx.Data.Schema.SpeciesSchema", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("AverageLifespan")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Classification")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Designation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EyeColor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HairColor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Height")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Language")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("PlanetId")
                        .HasColumnType("bigint");

                    b.Property<string>("SkinColor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("Id"));

                    b.HasIndex("PlanetId");

                    b.ToTable("Species", (string)null);
                });

            modelBuilder.Entity("Glx.Data.Schema.StarshipSchema", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("CargoCapacity")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Class")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Consumables")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Crew")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HyperdriveRating")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Length")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Manufacturer")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MaxAtmosphericSpeed")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MaxMegaLightsSpeed")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Passengers")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Price")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("Id"));

                    b.ToTable("Starships", (string)null);
                });

            modelBuilder.Entity("Glx.Data.Schema.VehicleSchema", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("CargoCapacity")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Class")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Consumables")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Crew")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Length")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Manufacturer")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MaxAtmosphericSpeed")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Passengers")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Price")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("Id"));

                    b.ToTable("Vehicles", (string)null);
                });

            modelBuilder.Entity("Movies_Characters", b =>
                {
                    b.Property<long>("CharactersId")
                        .HasColumnType("bigint");

                    b.Property<long>("MoviesId")
                        .HasColumnType("bigint");

                    b.HasKey("CharactersId", "MoviesId");

                    b.HasIndex("MoviesId");

                    b.ToTable("Movies_Characters");
                });

            modelBuilder.Entity("Movies_Planets", b =>
                {
                    b.Property<long>("MoviesId")
                        .HasColumnType("bigint");

                    b.Property<long>("PlanetsId")
                        .HasColumnType("bigint");

                    b.HasKey("MoviesId", "PlanetsId");

                    b.HasIndex("PlanetsId");

                    b.ToTable("Movies_Planets");
                });

            modelBuilder.Entity("Movies_Species", b =>
                {
                    b.Property<long>("MoviesId")
                        .HasColumnType("bigint");

                    b.Property<long>("SpeciesId")
                        .HasColumnType("bigint");

                    b.HasKey("MoviesId", "SpeciesId");

                    b.HasIndex("SpeciesId");

                    b.ToTable("Movies_Species");
                });

            modelBuilder.Entity("Movies_Starships", b =>
                {
                    b.Property<long>("MoviesId")
                        .HasColumnType("bigint");

                    b.Property<long>("StarshipsId")
                        .HasColumnType("bigint");

                    b.HasKey("MoviesId", "StarshipsId");

                    b.HasIndex("StarshipsId");

                    b.ToTable("Movies_Starships");
                });

            modelBuilder.Entity("Movies_Vehicles", b =>
                {
                    b.Property<long>("MoviesId")
                        .HasColumnType("bigint");

                    b.Property<long>("VehiclesId")
                        .HasColumnType("bigint");

                    b.HasKey("MoviesId", "VehiclesId");

                    b.HasIndex("VehiclesId");

                    b.ToTable("Movies_Vehicles");
                });

            modelBuilder.Entity("Characters_Species", b =>
                {
                    b.HasOne("Glx.Data.Schema.CharacterSchema", null)
                        .WithMany()
                        .HasForeignKey("CharactersId")
                        .IsRequired();

                    b.HasOne("Glx.Data.Schema.SpeciesSchema", null)
                        .WithMany()
                        .HasForeignKey("SpeciesId")
                        .IsRequired();
                });

            modelBuilder.Entity("Characters_Starships", b =>
                {
                    b.HasOne("Glx.Data.Schema.CharacterSchema", null)
                        .WithMany()
                        .HasForeignKey("PilotsId")
                        .IsRequired();

                    b.HasOne("Glx.Data.Schema.StarshipSchema", null)
                        .WithMany()
                        .HasForeignKey("StarshipsId")
                        .IsRequired();
                });

            modelBuilder.Entity("Characters_Vehicles", b =>
                {
                    b.HasOne("Glx.Data.Schema.CharacterSchema", null)
                        .WithMany()
                        .HasForeignKey("PilotsId")
                        .IsRequired();

                    b.HasOne("Glx.Data.Schema.VehicleSchema", null)
                        .WithMany()
                        .HasForeignKey("VehiclesId")
                        .IsRequired();
                });

            modelBuilder.Entity("Glx.Data.Schema.CharacterSchema", b =>
                {
                    b.HasOne("Glx.Data.Schema.PlanetSchema", "Planet")
                        .WithMany("Residents")
                        .HasForeignKey("PlanetId")
                        .IsRequired();

                    b.Navigation("Planet");
                });

            modelBuilder.Entity("Glx.Data.Schema.SpeciesSchema", b =>
                {
                    b.HasOne("Glx.Data.Schema.PlanetSchema", "Planet")
                        .WithMany()
                        .HasForeignKey("PlanetId");

                    b.Navigation("Planet");
                });

            modelBuilder.Entity("Movies_Characters", b =>
                {
                    b.HasOne("Glx.Data.Schema.CharacterSchema", null)
                        .WithMany()
                        .HasForeignKey("CharactersId")
                        .IsRequired();

                    b.HasOne("Glx.Data.Schema.MovieSchema", null)
                        .WithMany()
                        .HasForeignKey("MoviesId")
                        .IsRequired();
                });

            modelBuilder.Entity("Movies_Planets", b =>
                {
                    b.HasOne("Glx.Data.Schema.MovieSchema", null)
                        .WithMany()
                        .HasForeignKey("MoviesId")
                        .IsRequired();

                    b.HasOne("Glx.Data.Schema.PlanetSchema", null)
                        .WithMany()
                        .HasForeignKey("PlanetsId")
                        .IsRequired();
                });

            modelBuilder.Entity("Movies_Species", b =>
                {
                    b.HasOne("Glx.Data.Schema.MovieSchema", null)
                        .WithMany()
                        .HasForeignKey("MoviesId")
                        .IsRequired();

                    b.HasOne("Glx.Data.Schema.SpeciesSchema", null)
                        .WithMany()
                        .HasForeignKey("SpeciesId")
                        .IsRequired();
                });

            modelBuilder.Entity("Movies_Starships", b =>
                {
                    b.HasOne("Glx.Data.Schema.MovieSchema", null)
                        .WithMany()
                        .HasForeignKey("MoviesId")
                        .IsRequired();

                    b.HasOne("Glx.Data.Schema.StarshipSchema", null)
                        .WithMany()
                        .HasForeignKey("StarshipsId")
                        .IsRequired();
                });

            modelBuilder.Entity("Movies_Vehicles", b =>
                {
                    b.HasOne("Glx.Data.Schema.MovieSchema", null)
                        .WithMany()
                        .HasForeignKey("MoviesId")
                        .IsRequired();

                    b.HasOne("Glx.Data.Schema.VehicleSchema", null)
                        .WithMany()
                        .HasForeignKey("VehiclesId")
                        .IsRequired();
                });

            modelBuilder.Entity("Glx.Data.Schema.PlanetSchema", b =>
                {
                    b.Navigation("Residents");
                });
#pragma warning restore 612, 618
        }
    }
}
